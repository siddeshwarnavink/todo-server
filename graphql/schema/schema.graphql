type User {
  id: Int!
  username: String!
  email: String!
  isAdmin: Boolean!
  company: Int!
}

type AuthData {
  userId: Int!
  token: String!
}

type Group {
  id: Int!
  title: String!
  description: String!
  creator: User!
  members: [User!]
}

type TaskMember {
  user: User!
  completed: Boolean
}

type Task {
  id: Int
  title: String!
  description: String!
  creator: User!
  members: [User!]!
  starts_at: String!
  ends_at: String!
  group: Group
  members: [TaskMember!]
  completed: Boolean!
  taskDone: Boolean!
  canEdit: Boolean!
}

type ValidateToken {
  newToken: String!
  user: User
}

type Company {
  title: String!
  logo: String!
  owner: User!
  members: [User!]!
  membersCount: Int!
  groupsCount: Int!
  groups: [Group!]!
}

type Notification {
  icon: String!
  message: String!
  link: String!
  created_at: String!
}

type Comment {
  message: String!
  creator: User!
  created_at: String!
}

type Report {
  Ydata: String!
}

type RootQuery {
  login(email: String!, password: String!): AuthData
  adminLogin(email: String!, password: String!): AuthData
  validToken(token: String!): ValidateToken
  user(id: Int!): User

  groups: [Group]!
  group(id: Int!): Group

  tasks: [Task!]!
  groupTask(groupId: Int!): [Task!]!
  task(taskId: Int!): Task

  companyStaics: Company!
  companyReport(type: Int!, duration: Int!): Report!

  comments(type: String!, payload: Int!): [Comment!]!

  notificationCount: Int!
  notifications: [Notification!]!
}

type RootMutation {
  addGroup(title: String!, description: String!, members: String!): Boolean
  editGroup(
    id: Int!
    title: String!
    description: String!
    members: String!
  ): Boolean
  deleteGroup(id: Int!): Boolean

  editUser(userId: Int!, username: String!, isAdmin: Boolean, newPassword: String): User
  addUser(
    username: String!
    email: String!
    isAdmin: Boolean
    password: String!
  ): Boolean
  deleteUser(id: Int!): Boolean

  createTask(
    title: String!
    description: String!
    starts_at: String!
    ends_at: String!
    groupId: Int!
    members: String!
  ): Boolean
  completeTask(taskId: Int!): Boolean
  editTask(
    id: Int!
    title: String!
    description: String!
    starts_at: String!
    ends_at: String!
    groupId: Int!
    members: String!
  ): Boolean
  deleteTask(id: Int!): Boolean

  clearNotifications: Boolean

  postComment(message: String!, type: String!, payload: Int!): Boolean
}

schema {
  query: RootQuery
  mutation: RootMutation
}
